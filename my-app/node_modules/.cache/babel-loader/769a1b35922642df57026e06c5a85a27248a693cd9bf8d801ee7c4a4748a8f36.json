{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\nfunction LineChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const character1Data = characterDetails.find(character => character.name === character1);\n    const character2Data = characterDetails.find(character => character.name === character2);\n    if (chartRef.current && character1Data && character2Data) {\n      const character1RarityCounts = {\n        '4 stars': Array.isArray(character1Data.rarity) ? character1Data.rarity.filter(rarity => rarity === 4).length : 0,\n        '5 stars': Array.isArray(character1Data.rarity) ? character1Data.rarity.filter(rarity => rarity === 5).length : 0\n      };\n      const character2RarityCounts = {\n        '4 stars': Array.isArray(character2Data.rarity) ? character2Data.rarity.filter(rarity => rarity === 4).length : 0,\n        '5 stars': Array.isArray(character2Data.rarity) ? character2Data.rarity.filter(rarity => rarity === 5).length : 0\n      };\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'line',\n        data: {\n          labels: ['4 Stars', '5 Stars'],\n          datasets: [{\n            label: character1,\n            data: [character1RarityCounts['4 stars'], character1RarityCounts['5 stars']],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1,\n            fill: true,\n            tension: 0.4\n          }, {\n            label: character2,\n            data: [character2RarityCounts['4 stars'], character2RarityCounts['5 stars']],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            // Change to transparent background\n            borderColor: 'rgba(54, 162, 235, 1)',\n            // Change to solid border color\n            pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n            // Set point color same as border color\n            borderWidth: 1,\n            fill: true,\n            tension: 0.4\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top' // Position legend at the top\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false // Hide x-axis grid lines\n              }\n            },\n            y: {\n              beginAtZero: true // Start y-axis scale from zero\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      // Cleanup function to destroy the chart when the component unmounts or before rendering a new one\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [character1, character2, characterDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '-15%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Legend","Tooltip","jsxDEV","_jsxDEV","register","LineChart","character1","character2","characterDetails","_s","chartRef","chartInstance","character1Data","find","character","name","character2Data","current","character1RarityCounts","Array","isArray","rarity","filter","length","character2RarityCounts","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","borderWidth","fill","tension","options","plugins","legend","display","position","scales","x","grid","y","beginAtZero","destroy","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/LineChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\r\n\r\nfunction LineChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    const character1Data = characterDetails.find(character => character.name === character1);\r\n    const character2Data = characterDetails.find(character => character.name === character2);\r\n\r\n    if (chartRef.current && character1Data && character2Data) {\r\n      const character1RarityCounts = {\r\n        '4 stars': Array.isArray(character1Data.rarity) ? character1Data.rarity.filter(rarity => rarity === 4).length : 0,\r\n        '5 stars': Array.isArray(character1Data.rarity) ? character1Data.rarity.filter(rarity => rarity === 5).length : 0,\r\n      };\r\n      const character2RarityCounts = {\r\n        '4 stars': Array.isArray(character2Data.rarity) ? character2Data.rarity.filter(rarity => rarity === 4).length : 0,\r\n        '5 stars': Array.isArray(character2Data.rarity) ? character2Data.rarity.filter(rarity => rarity === 5).length : 0,\r\n      };\r\n\r\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'line',\r\n        data: {\r\n          labels: ['4 Stars', '5 Stars'],\r\n          datasets: [\r\n            {\r\n              label: character1,\r\n              data: [character1RarityCounts['4 stars'], character1RarityCounts['5 stars']],\r\n              backgroundColor: 'rgba(255, 99, 132, 0.2)', \r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              pointBackgroundColor: 'rgba(255, 99, 132, 1)',\r\n              borderWidth: 1,\r\n              fill: true,\r\n              tension: 0.4,\r\n            },\r\n            {\r\n              label: character2,\r\n              data: [character2RarityCounts['4 stars'], character2RarityCounts['5 stars']],\r\n              backgroundColor: 'rgba(54, 162, 235, 0.2)', // Change to transparent background\r\n              borderColor: 'rgba(54, 162, 235, 1)', // Change to solid border color\r\n              pointBackgroundColor: 'rgba(54, 162, 235, 1)', // Set point color same as border color\r\n              borderWidth: 1,\r\n              fill: true,\r\n              tension: 0.4,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top', // Position legend at the top\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false, // Hide x-axis grid lines\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true, // Start y-axis scale from zero\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      // Cleanup function to destroy the chart when the component unmounts or before rendering a new one\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  return (\r\n    <div className=\"line-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%',marginTop:'-15%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,KAAK,IAAIC,OAAO,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpHR,OAAO,CAACS,QAAQ,CAACR,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,CAAC;AAExF,SAASI,SAASA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAMC,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIkB,aAAa,GAAG,IAAI;IAExB,MAAMC,cAAc,GAAGJ,gBAAgB,CAACK,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,IAAI,KAAKT,UAAU,CAAC;IACxF,MAAMU,cAAc,GAAGR,gBAAgB,CAACK,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,IAAI,KAAKR,UAAU,CAAC;IAExF,IAAIG,QAAQ,CAACO,OAAO,IAAIL,cAAc,IAAII,cAAc,EAAE;MACxD,MAAME,sBAAsB,GAAG;QAC7B,SAAS,EAAEC,KAAK,CAACC,OAAO,CAACR,cAAc,CAACS,MAAM,CAAC,GAAGT,cAAc,CAACS,MAAM,CAACC,MAAM,CAACD,MAAM,IAAIA,MAAM,KAAK,CAAC,CAAC,CAACE,MAAM,GAAG,CAAC;QACjH,SAAS,EAAEJ,KAAK,CAACC,OAAO,CAACR,cAAc,CAACS,MAAM,CAAC,GAAGT,cAAc,CAACS,MAAM,CAACC,MAAM,CAACD,MAAM,IAAIA,MAAM,KAAK,CAAC,CAAC,CAACE,MAAM,GAAG;MAClH,CAAC;MACD,MAAMC,sBAAsB,GAAG;QAC7B,SAAS,EAAEL,KAAK,CAACC,OAAO,CAACJ,cAAc,CAACK,MAAM,CAAC,GAAGL,cAAc,CAACK,MAAM,CAACC,MAAM,CAACD,MAAM,IAAIA,MAAM,KAAK,CAAC,CAAC,CAACE,MAAM,GAAG,CAAC;QACjH,SAAS,EAAEJ,KAAK,CAACC,OAAO,CAACJ,cAAc,CAACK,MAAM,CAAC,GAAGL,cAAc,CAACK,MAAM,CAACC,MAAM,CAACD,MAAM,IAAIA,MAAM,KAAK,CAAC,CAAC,CAACE,MAAM,GAAG;MAClH,CAAC;MAEDZ,aAAa,GAAG,IAAIhB,OAAO,CAACe,QAAQ,CAACO,OAAO,CAACQ,UAAU,CAAC,IAAI,CAAC,EAAE;QAC7DC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC9BC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAExB,UAAU;YACjBqB,IAAI,EAAE,CAACT,sBAAsB,CAAC,SAAS,CAAC,EAAEA,sBAAsB,CAAC,SAAS,CAAC,CAAC;YAC5Ea,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,oBAAoB,EAAE,uBAAuB;YAC7CC,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE,IAAI;YACVC,OAAO,EAAE;UACX,CAAC,EACD;YACEN,KAAK,EAAEvB,UAAU;YACjBoB,IAAI,EAAE,CAACH,sBAAsB,CAAC,SAAS,CAAC,EAAEA,sBAAsB,CAAC,SAAS,CAAC,CAAC;YAC5EO,eAAe,EAAE,yBAAyB;YAAE;YAC5CC,WAAW,EAAE,uBAAuB;YAAE;YACtCC,oBAAoB,EAAE,uBAAuB;YAAE;YAC/CC,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE,IAAI;YACVC,OAAO,EAAE;UACX,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,OAAO,EAAE,IAAI;cACbC,QAAQ,EAAE,KAAK,CAAE;YACnB;UACF,CAAC;UACDC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,IAAI,EAAE;gBACJJ,OAAO,EAAE,KAAK,CAAE;cAClB;YACF,CAAC;YACDK,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI,CAAE;YACrB;UACF;QACF;MACF,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX;MACA,IAAInC,aAAa,EAAE;QACjBA,aAAa,CAACoC,OAAO,CAAC,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,CAACzC,UAAU,EAAEC,UAAU,EAAEC,gBAAgB,CAAC,CAAC;EAE9C,oBACEL,OAAA;IAAK6C,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnC9C,OAAA;MAAK+C,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,KAAK;QAACC,SAAS,EAAC;MAAO,CAAE;MAAAN,QAAA,eACjG9C,OAAA;QAAQqD,GAAG,EAAE9C;MAAS;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnD,EAAA,CAlFQJ,SAAS;AAAAwD,EAAA,GAATxD,SAAS;AAoFlB,eAAeA,SAAS;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}