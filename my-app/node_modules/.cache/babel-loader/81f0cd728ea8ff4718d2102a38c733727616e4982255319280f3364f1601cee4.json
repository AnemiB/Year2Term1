{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\pages\\\\Comparison.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PieChart from \"../components/PieChart\";\nimport LineChart from \"../components/LineChart\";\nimport BarChart from \"../components/BarChart\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comparison() {\n  _s();\n  const [selectedCharacters, setSelectedCharacters] = useState([]);\n  const [characterDetails, setCharacterDetails] = useState([]);\n  useEffect(() => {\n    const fetchCharacterDetails = async () => {\n      try {\n        const response = await axios.get('https://genshinlist.com/api/characters');\n        setCharacterDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n    fetchCharacterDetails();\n  }, []);\n  const handleCharacterChange = character => {\n    if (selectedCharacters.includes(character)) {\n      setSelectedCharacters(selectedCharacters.filter(item => item !== character));\n    } else {\n      setSelectedCharacters([...selectedCharacters, character]);\n    }\n  };\n  const charactersPerColumn = 5; // Number of characters per column\n\n  // Split characterDetails into chunks for columns\n  const chunks = [];\n  for (let i = 0; i < characterDetails.length; i += charactersPerColumn) {\n    chunks.push(characterDetails.slice(i, i + charactersPerColumn));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    style: {\n      backgroundColor: '#192536',\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: chunk.map(character => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: '14px',\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedCharacters.includes(character.name),\n            onChange: () => handleCharacterChange(character.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), \" \", character.name]\n        }, character.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedCharacters.length === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Comparison for \", selectedCharacters[0], \" vs \", selectedCharacters[1], /*#__PURE__*/_jsxDEV(PieChart, {\n        character1: selectedCharacters[0],\n        character2: selectedCharacters[1],\n        characterDetails: characterDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        character1: selectedCharacters[0],\n        character2: selectedCharacters[1],\n        characterDetails: characterDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        character1: selectedCharacters[0],\n        character2: selectedCharacters[1],\n        characterDetails: characterDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please select two characters for comparison.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Comparison, \"Hinu9xIhqhHbG15ffkTDxvALOkQ=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["useState","useEffect","axios","PieChart","LineChart","BarChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Comparison","_s","selectedCharacters","setSelectedCharacters","characterDetails","setCharacterDetails","fetchCharacterDetails","response","get","data","error","console","handleCharacterChange","character","includes","filter","item","charactersPerColumn","chunks","i","length","push","slice","className","style","backgroundColor","color","children","marginBottom","display","flexDirection","map","chunk","index","flex","fontSize","type","checked","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","character1","character2","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/pages/Comparison.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PieChart from \"../components/PieChart\";\r\nimport LineChart from \"../components/LineChart\";\r\nimport BarChart from \"../components/BarChart\";\r\n\r\nfunction Comparison() {\r\n  const [selectedCharacters, setSelectedCharacters] = useState([]);\r\n  const [characterDetails, setCharacterDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCharacterDetails = async () => {\r\n      try {\r\n        const response = await axios.get('https://genshinlist.com/api/characters');\r\n        setCharacterDetails(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching character details:', error);\r\n      }\r\n    };\r\n\r\n    fetchCharacterDetails();\r\n  }, []);\r\n\r\n  const handleCharacterChange = (character) => {\r\n    if (selectedCharacters.includes(character)) {\r\n      setSelectedCharacters(selectedCharacters.filter(item => item !== character));\r\n    } else {\r\n      setSelectedCharacters([...selectedCharacters, character]);\r\n    }\r\n  };\r\n\r\n  const charactersPerColumn = 5; // Number of characters per column\r\n\r\n  // Split characterDetails into chunks for columns\r\n  const chunks = [];\r\n  for (let i = 0; i < characterDetails.length; i += charactersPerColumn) {\r\n    chunks.push(characterDetails.slice(i, i + charactersPerColumn));\r\n  }\r\n\r\n  return (\r\n    <div className='page' style={{ backgroundColor: '#192536', color: 'white' }}>\r\n      <div style={{ marginBottom: '20px', display: 'flex', flexDirection: 'row' }}>\r\n        {chunks.map((chunk, index) => (\r\n          <div key={index} style={{ flex: 1 }}>\r\n            {chunk.map(character => (\r\n              <label key={character.name} style={{ fontSize: '14px', display: 'block' }}>\r\n                <input type=\"checkbox\" checked={selectedCharacters.includes(character.name)} onChange={() => handleCharacterChange(character.name)} /> {character.name}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedCharacters.length === 2 ? (\r\n        <>\r\n          Comparison for {selectedCharacters[0]} vs {selectedCharacters[1]}\r\n          <PieChart character1={selectedCharacters[0]} character2={selectedCharacters[1]} characterDetails={characterDetails} />\r\n          <LineChart character1={selectedCharacters[0]} character2={selectedCharacters[1]} characterDetails={characterDetails} />\r\n          <BarChart character1={selectedCharacters[0]} character2={selectedCharacters[1]} characterDetails={characterDetails} />\r\n        </>\r\n      ) : (\r\n        <div>Please select two characters for comparison.</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comparison;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}