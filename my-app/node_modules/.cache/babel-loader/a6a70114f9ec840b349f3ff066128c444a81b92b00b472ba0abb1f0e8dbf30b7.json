{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\pages\\\\Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Timeline.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timeline() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [characterBirthday, setCharacterBirthday] = useState('');\n  useEffect(() => {\n    axios.get('https://genshinlist.com/api/characters').then(response => {\n      const dilucCharacter = response.data.find(character => character.name === 'Diluc');\n      if (dilucCharacter) {\n        setCharacterBirthday(dilucCharacter.birthday);\n        generateEvents(dilucCharacter.birthday);\n      } else {\n        console.log('Character not found');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const generateEvents = birthday => {\n    // Assuming events are generated for a year after the character's birthday\n    const startDate = new Date(birthday);\n    const endDate = new Date(startDate.getFullYear() + 1, startDate.getMonth(), startDate.getDate());\n    const generatedEvents = [];\n    let currentDate = new Date(startDate);\n    while (currentDate < endDate) {\n      const eventDate = currentDate.toDateString();\n      generatedEvents.push({\n        id: eventDate,\n        title: 'Event',\n        date: eventDate\n      });\n      currentDate.setDate(currentDate.getDate() + 30); // Assuming events are spaced 30 days apart\n    }\n    setEvents(generatedEvents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-title\",\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-date\",\n            children: event.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Timeline, \"Rq8u96zkpFr71gaF6Jt3m551hY0=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Timeline","_s","events","setEvents","characterBirthday","setCharacterBirthday","get","then","response","dilucCharacter","data","find","character","name","birthday","generateEvents","console","log","catch","error","startDate","Date","endDate","getFullYear","getMonth","getDate","generatedEvents","currentDate","eventDate","toDateString","push","id","title","date","setDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/pages/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Timeline.css';\r\nimport axios from 'axios';\r\n\r\nfunction Timeline() {\r\n  const [events, setEvents] = useState([]);\r\n  const [characterBirthday, setCharacterBirthday] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get('https://genshinlist.com/api/characters')\r\n      .then(response => {\r\n        const dilucCharacter = response.data.find(character => character.name === 'Diluc');\r\n        if (dilucCharacter) {\r\n          setCharacterBirthday(dilucCharacter.birthday);\r\n          generateEvents(dilucCharacter.birthday);\r\n        } else {\r\n          console.log('Character not found');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const generateEvents = (birthday) => {\r\n    // Assuming events are generated for a year after the character's birthday\r\n    const startDate = new Date(birthday);\r\n    const endDate = new Date(startDate.getFullYear() + 1, startDate.getMonth(), startDate.getDate());\r\n\r\n    const generatedEvents = [];\r\n    let currentDate = new Date(startDate);\r\n\r\n    while (currentDate < endDate) {\r\n      const eventDate = currentDate.toDateString();\r\n      generatedEvents.push({ id: eventDate, title: 'Event', date: eventDate });\r\n      currentDate.setDate(currentDate.getDate() + 30); // Assuming events are spaced 30 days apart\r\n    }\r\n\r\n    setEvents(generatedEvents);\r\n  };\r\n\r\n  return (\r\n    <div className=\"timeline\">\r\n      <h1>Timeline</h1>\r\n      <ul>\r\n        {events.map(event => (\r\n          <li key={event.id}>\r\n            <div className=\"event\">\r\n              <div className=\"event-title\">{event.title}</div>\r\n              <div className=\"event-date\">{event.date}</div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timeline;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}