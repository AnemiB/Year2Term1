{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\nfunction LineChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  const [character1RarityCounts, setCharacter1RarityCounts] = useState({\n    '4 stars': 0,\n    '5 stars': 0\n  });\n  const [character2RarityCounts, setCharacter2RarityCounts] = useState({\n    '4 stars': 0,\n    '5 stars': 0\n  });\n  useEffect(() => {\n    if (chartRef.current) {\n      const chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'line',\n        data: {\n          labels: ['4 Stars', '5 Stars'],\n          datasets: [{\n            label: character1,\n            data: [character1RarityCounts['4 stars'], character1RarityCounts['5 stars']],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1,\n            fill: true,\n            tension: 0.4\n          }, {\n            label: character2,\n            data: [character2RarityCounts['4 stars'], character2RarityCounts['5 stars']],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n            fill: true,\n            tension: 0.4\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      return () => {\n        chartInstance.destroy();\n      };\n    }\n  }, [character1, character2, character1RarityCounts, character2RarityCounts]);\n  useEffect(() => {\n    const character1Data = characterDetails.find(character => character.name === character1);\n    const character2Data = characterDetails.find(character => character.name === character2);\n    if (character1Data && character2Data) {\n      const countRarity = data => {\n        return {\n          '4 stars': Array.isArray(data.rarity) ? data.rarity.filter(rarity => rarity === 4).length : 0,\n          '5 stars': Array.isArray(data.rarity) ? data.rarity.filter(rarity => rarity === 5).length : 0\n        };\n      };\n      setCharacter1RarityCounts(countRarity(character1Data));\n      setCharacter2RarityCounts(countRarity(character2Data));\n    }\n  }, [character1, character2, characterDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '-15%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"nogW339dSspBcYOZay6R6VTOtag=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Legend","Tooltip","jsxDEV","_jsxDEV","register","LineChart","character1","character2","characterDetails","_s","chartRef","character1RarityCounts","setCharacter1RarityCounts","character2RarityCounts","setCharacter2RarityCounts","current","chartInstance","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","borderWidth","fill","tension","options","plugins","legend","display","position","scales","x","grid","y","beginAtZero","destroy","character1Data","find","character","name","character2Data","countRarity","Array","isArray","rarity","filter","length","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/LineChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\r\n\r\nfunction LineChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n  const [character1RarityCounts, setCharacter1RarityCounts] = useState({ '4 stars': 0, '5 stars': 0 });\r\n  const [character2RarityCounts, setCharacter2RarityCounts] = useState({ '4 stars': 0, '5 stars': 0 });\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      const chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'line',\r\n        data: {\r\n          labels: ['4 Stars', '5 Stars'],\r\n          datasets: [\r\n            {\r\n              label: character1,\r\n              data: [character1RarityCounts['4 stars'], character1RarityCounts['5 stars']],\r\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              pointBackgroundColor: 'rgba(255, 99, 132, 1)',\r\n              borderWidth: 1,\r\n              fill: true,\r\n              tension: 0.4,\r\n            },\r\n            {\r\n              label: character2,\r\n              data: [character2RarityCounts['4 stars'], character2RarityCounts['5 stars']],\r\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n              borderColor: 'rgba(54, 162, 235, 1)',\r\n              pointBackgroundColor: 'rgba(54, 162, 235, 1)',\r\n              borderWidth: 1,\r\n              fill: true,\r\n              tension: 0.4,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      return () => {\r\n        chartInstance.destroy();\r\n      };\r\n    }\r\n  }, [character1, character2, character1RarityCounts, character2RarityCounts]);\r\n\r\n  useEffect(() => {\r\n    const character1Data = characterDetails.find(character => character.name === character1);\r\n    const character2Data = characterDetails.find(character => character.name === character2);\r\n\r\n    if (character1Data && character2Data) {\r\n      const countRarity = (data) => {\r\n        return {\r\n          '4 stars': Array.isArray(data.rarity) ? data.rarity.filter(rarity => rarity === 4).length : 0,\r\n          '5 stars': Array.isArray(data.rarity) ? data.rarity.filter(rarity => rarity === 5).length : 0,\r\n        };\r\n      };\r\n\r\n      setCharacter1RarityCounts(countRarity(character1Data));\r\n      setCharacter2RarityCounts(countRarity(character2Data));\r\n    }\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  return (\r\n    <div className=\"line-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%', marginTop: '-15%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}