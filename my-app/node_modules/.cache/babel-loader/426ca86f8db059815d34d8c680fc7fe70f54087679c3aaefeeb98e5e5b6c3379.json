{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\nfunction LineChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const countRarityData = () => {\n      const dataCounts = {\n        '4 stars': 0,\n        '5 stars': 0\n      };\n      [character1, character2].forEach(characterName => {\n        const character = characterDetails.find(char => char.name === characterName);\n        if (character) {\n          if (Array.isArray(character.rarity)) {\n            character.rarity.forEach(rarity => {\n              dataCounts[rarity + ' stars'] += 1; // Increment count for the respective rarity\n            });\n          } else {\n            dataCounts[character.rarity + ' stars'] += 1; // Increment count for the single rarity\n          }\n        }\n      });\n      return dataCounts;\n    };\n    const rarityData = countRarityData();\n    if (chartRef.current && Object.keys(rarityData).length !== 0) {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'line',\n        data: {\n          labels: ['4 Stars', '5 Stars'],\n          datasets: [{\n            label: 'Rarity Distribution',\n            // Updated label here\n            data: [rarityData['4 stars'], rarityData['5 stars']],\n            backgroundColor: 'white',\n            // Transparent background\n            borderColor: 'rgba(54, 162, 235, 1)',\n            // Blue line color\n            pointBackgroundColor: 'rgba(255, 255, 255, 1)',\n            // White point color\n            borderWidth: 2,\n            // Increased border width for better visibility\n            fill: true,\n            tension: 0.4\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [character1, character2, characterDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '3%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Legend","Tooltip","jsxDEV","_jsxDEV","register","LineChart","character1","character2","characterDetails","_s","chartRef","chartInstance","countRarityData","dataCounts","forEach","characterName","character","find","char","name","Array","isArray","rarity","rarityData","current","Object","keys","length","destroy","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","borderWidth","fill","tension","options","plugins","legend","display","position","scales","x","grid","y","beginAtZero","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/LineChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\r\n\r\nfunction LineChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    const countRarityData = () => {\r\n      const dataCounts = { '4 stars': 0, '5 stars': 0 };\r\n\r\n      [character1, character2].forEach(characterName => {\r\n        const character = characterDetails.find(char => char.name === characterName);\r\n        if (character) {\r\n          if (Array.isArray(character.rarity)) {\r\n            character.rarity.forEach(rarity => {\r\n              dataCounts[rarity + ' stars'] += 1; // Increment count for the respective rarity\r\n            });\r\n          } else {\r\n            dataCounts[character.rarity + ' stars'] += 1; // Increment count for the single rarity\r\n          }\r\n        }\r\n      });\r\n      return dataCounts;\r\n    };\r\n\r\n    const rarityData = countRarityData();\r\n\r\n    if (chartRef.current && Object.keys(rarityData).length !== 0) {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'line',\r\n        data: {\r\n          labels: ['4 Stars', '5 Stars'],\r\n          datasets: [\r\n            {\r\n              label: 'Rarity Distribution', // Updated label here\r\n              data: [rarityData['4 stars'], rarityData['5 stars']],\r\n              backgroundColor: 'white', // Transparent background\r\n              borderColor: 'rgba(54, 162, 235, 1)', // Blue line color\r\n              pointBackgroundColor: 'rgba(255, 255, 255, 1)', // White point color\r\n              borderWidth: 2, // Increased border width for better visibility\r\n              fill: true,\r\n              tension: 0.4,\r\n            }\r\n          ],\r\n        },\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  return (\r\n    <div className=\"line-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%', marginTop: '3%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}