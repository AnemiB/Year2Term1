{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction PieChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: ['Organic', 'Direct', 'Referral', 'Social Media'],\n    datasets: [{\n      data: [4, 5, 8, 20],\n      backgroundColor: ['orangered', 'purple', 'aqua', 'green']\n    }]\n  });\n  useEffect(() => {\n    const updateChartData = () => {\n      if (characterDetails.length === 0) return;\n\n      // Fetch data for character1\n      const character1Data = characterDetails.find(character => character.name === character1);\n      // Fetch data for character2\n      const character2Data = characterDetails.find(character => character.name === character2);\n      if (character1Data && character2Data) {\n        // Example: Update chart data based on character details\n        const newChartData = {\n          labels: ['Stat1', 'Stat2', 'Stat3', 'Stat4'],\n          datasets: [{\n            data: [character1Data.stat1, character1Data.stat2, character2Data.stat1, character2Data.stat2],\n            backgroundColor: ['orangered', 'purple', 'aqua', 'green']\n          }]\n        };\n        setChartData(newChartData);\n      }\n    };\n    updateChartData();\n  }, [character1, character2, characterDetails]);\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Character Stats Comparison'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: 'transparent'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        width: '70%',\n        marginTop: '5%',\n        marginLeft: '15%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(PieChart, \"KKkiJlof/ZHXndxpdzAtIbsbWdU=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["useEffect","useState","Pie","axios","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","PieChart","character1","character2","characterDetails","_s","chartData","setChartData","labels","datasets","data","backgroundColor","updateChartData","length","character1Data","find","character","name","character2Data","newChartData","stat1","stat2","options","plugins","legend","display","position","title","text","className","style","children","padding","width","marginTop","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/PieChart.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nfunction PieChart({ character1, character2, characterDetails }) {\r\n  const [chartData, setChartData] = useState({\r\n    labels: ['Organic', 'Direct', 'Referral', 'Social Media'],\r\n    datasets: [\r\n      {\r\n        data: [4, 5, 8, 20],\r\n        backgroundColor: ['orangered', 'purple', 'aqua', 'green'],\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateChartData = () => {\r\n      if (characterDetails.length === 0) return;\r\n\r\n      // Fetch data for character1\r\n      const character1Data = characterDetails.find(character => character.name === character1);\r\n      // Fetch data for character2\r\n      const character2Data = characterDetails.find(character => character.name === character2);\r\n\r\n      if (character1Data && character2Data) {\r\n        // Example: Update chart data based on character details\r\n        const newChartData = {\r\n          labels: ['Stat1', 'Stat2', 'Stat3', 'Stat4'],\r\n          datasets: [\r\n            {\r\n              data: [character1Data.stat1, character1Data.stat2, character2Data.stat1, character2Data.stat2],\r\n              backgroundColor: ['orangered', 'purple', 'aqua', 'green'],\r\n            },\r\n          ],\r\n        };\r\n\r\n        setChartData(newChartData);\r\n      }\r\n    };\r\n\r\n    updateChartData();\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Character Stats Comparison',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ backgroundColor: 'transparent' }}>\r\n      <div\r\n        style={{\r\n          padding: '20px',\r\n          width: '70%',\r\n          marginTop: '5%',\r\n          marginLeft: '15%',\r\n        }}\r\n      >\r\n        <Pie data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}