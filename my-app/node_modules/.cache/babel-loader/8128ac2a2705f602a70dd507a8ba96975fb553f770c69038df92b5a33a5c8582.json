{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\PieChart.js\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction PieChart({\n  selectedCharacters,\n  characterDetails\n}) {\n  // Function to calculate element counts for each selected character\n  const calculateElementCounts = () => {\n    const elementCounts = {\n      Pyro: 0,\n      Cryo: 0,\n      Hydro: 0,\n      Electro: 0,\n      Anemo: 0,\n      Geo: 0\n    };\n\n    // Add a guard clause to check if selectedCharacters is defined\n    if (!selectedCharacters || !Array.isArray(selectedCharacters)) {\n      return Object.values(elementCounts);\n    }\n    selectedCharacters.forEach(character => {\n      const characterData = characterDetails.find(char => char.name === character);\n      if (characterData) {\n        elementCounts[characterData.element]++;\n      }\n    });\n    return Object.values(elementCounts);\n  };\n  const data = {\n    labels: ['Pyro', 'Cryo', 'Hydro', 'Electro', 'Anemo', 'Geo'],\n    datasets: [{\n      data: calculateElementCounts(),\n      backgroundColor: ['orangered', 'white', 'aqua', 'purple', 'green', 'darkgoldenrod']\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Element Distribution for Selected Characters'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: 'transparent'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        width: '15%',\n        marginTop: '5%',\n        marginLeft: '40%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","jsxDEV","_jsxDEV","register","PieChart","selectedCharacters","characterDetails","calculateElementCounts","elementCounts","Pyro","Cryo","Hydro","Electro","Anemo","Geo","Array","isArray","Object","values","forEach","character","characterData","find","char","name","element","data","labels","datasets","backgroundColor","options","plugins","legend","display","position","title","text","className","style","children","padding","width","marginTop","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/PieChart.js"],"sourcesContent":["import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nfunction PieChart({ selectedCharacters, characterDetails }) {\r\n  // Function to calculate element counts for each selected character\r\n  const calculateElementCounts = () => {\r\n    const elementCounts = {\r\n      Pyro: 0,\r\n      Cryo: 0,\r\n      Hydro: 0,\r\n      Electro: 0,\r\n      Anemo: 0,\r\n      Geo: 0,\r\n    };\r\n\r\n    // Add a guard clause to check if selectedCharacters is defined\r\n    if (!selectedCharacters || !Array.isArray(selectedCharacters)) {\r\n      return Object.values(elementCounts);\r\n    }\r\n\r\n    selectedCharacters.forEach(character => {\r\n      const characterData = characterDetails.find(char => char.name === character);\r\n      if (characterData) {\r\n        elementCounts[characterData.element]++;\r\n      }\r\n    });\r\n\r\n    return Object.values(elementCounts);\r\n  };\r\n\r\n  const data = {\r\n    labels: ['Pyro', 'Cryo', 'Hydro', 'Electro', 'Anemo', 'Geo'],\r\n    datasets: [\r\n      {\r\n        data: calculateElementCounts(),\r\n        backgroundColor: ['orangered', 'white', 'aqua','purple','green','darkgoldenrod'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Element Distribution for Selected Characters',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{\r\n      backgroundColor: 'transparent'\r\n    }}>\r\n      <div\r\n        style={{\r\n          padding: '20px',\r\n          width: '15%',\r\n          marginTop: '5%',\r\n          marginLeft: '40%',\r\n        }}\r\n      >\r\n        <Pie data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n"],"mappings":";AAAA,SAASA,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,SAASK,QAAQA,CAAC;EAAEC,kBAAkB;EAAEC;AAAiB,CAAC,EAAE;EAC1D;EACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,aAAa,GAAG;MACpBC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAE;IACP,CAAC;;IAED;IACA,IAAI,CAACT,kBAAkB,IAAI,CAACU,KAAK,CAACC,OAAO,CAACX,kBAAkB,CAAC,EAAE;MAC7D,OAAOY,MAAM,CAACC,MAAM,CAACV,aAAa,CAAC;IACrC;IAEAH,kBAAkB,CAACc,OAAO,CAACC,SAAS,IAAI;MACtC,MAAMC,aAAa,GAAGf,gBAAgB,CAACgB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,SAAS,CAAC;MAC5E,IAAIC,aAAa,EAAE;QACjBb,aAAa,CAACa,aAAa,CAACI,OAAO,CAAC,EAAE;MACxC;IACF,CAAC,CAAC;IAEF,OAAOR,MAAM,CAACC,MAAM,CAACV,aAAa,CAAC;EACrC,CAAC;EAED,MAAMkB,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;IAC5DC,QAAQ,EAAE,CACR;MACEF,IAAI,EAAEnB,sBAAsB,CAAC,CAAC;MAC9BsB,eAAe,EAAE,CAAC,WAAW,EAAE,OAAO,EAAE,MAAM,EAAC,QAAQ,EAAC,OAAO,EAAC,eAAe;IACjF,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLF,OAAO,EAAE,IAAI;QACbG,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACElC,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAC1BT,eAAe,EAAE;IACnB,CAAE;IAAAU,QAAA,eACArC,OAAA;MACEoC,KAAK,EAAE;QACLE,OAAO,EAAE,MAAM;QACfC,KAAK,EAAE,KAAK;QACZC,SAAS,EAAE,IAAI;QACfC,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,eAEFrC,OAAA,CAACF,GAAG;QAAC0B,IAAI,EAAEA,IAAK;QAACI,OAAO,EAAEA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAlEQ5C,QAAQ;AAoEjB,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}