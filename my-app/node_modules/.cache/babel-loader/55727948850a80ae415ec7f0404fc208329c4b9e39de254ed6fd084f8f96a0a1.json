{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\LineGraphWeapon.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, registerables } from 'chart.js'; // Import registerables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(...registerables); // Register all components\n\nfunction LineGraphWeapon({\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const countWeaponData = () => {\n      const dataCounts = {};\n      characterDetails.forEach(character => {\n        const weapon = character.weapon === 'greatsword' ? 'claymore' : character.weapon;\n        dataCounts[weapon] = dataCounts[weapon] ? dataCounts[weapon] + 1 : 1; // Increment count for the respective weapon\n      });\n      return dataCounts;\n    };\n    const weaponData = countWeaponData();\n    if (chartRef.current && Object.keys(weaponData).length !== 0) {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n\n      // Define color map for each weapon type\n      const colorMap = {\n        polearm: 'red',\n        catalyst: 'blue',\n        sword: 'turquoise',\n        claymore: 'orange',\n        bow: 'pink'\n      };\n      const labels = Object.keys(weaponData);\n      const data = Object.values(weaponData).map(count => {\n        return {\n          x: labels,\n          y: count\n        };\n      });\n      const backgroundColor = 'rgba(0, 0, 0, 0)'; // Transparent background\n      const borderColor = Object.values(colorMap); // Border colors for each data point\n\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Weapon Distribution',\n            data: data,\n            backgroundColor: backgroundColor,\n            borderColor: borderColor,\n            borderWidth: 2,\n            pointBackgroundColor: borderColor,\n            // Point color\n            pointBorderColor: borderColor,\n            // Point border color\n            pointRadius: 5,\n            // Point radius\n            pointHoverRadius: 8,\n            // Point hover radius\n            fill: false // Disable fill under the line\n          }]\n        },\n        options: {\n          plugins: {\n            title: {\n              display: true,\n              text: 'Weapon Distribution'\n            },\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [characterDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '3%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(LineGraphWeapon, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineGraphWeapon;\nexport default LineGraphWeapon;\nvar _c;\n$RefreshReg$(_c, \"LineGraphWeapon\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","registerables","jsxDEV","_jsxDEV","register","LineGraphWeapon","characterDetails","_s","chartRef","chartInstance","countWeaponData","dataCounts","forEach","character","weapon","weaponData","current","Object","keys","length","destroy","colorMap","polearm","catalyst","sword","claymore","bow","labels","data","values","map","count","x","y","backgroundColor","borderColor","getContext","type","datasets","label","borderWidth","pointBackgroundColor","pointBorderColor","pointRadius","pointHoverRadius","fill","options","plugins","title","display","text","legend","position","scales","grid","beginAtZero","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/LineGraphWeapon.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, registerables } from 'chart.js'; // Import registerables\r\n\r\nChartJS.register(...registerables); // Register all components\r\n\r\nfunction LineGraphWeapon({ characterDetails }) {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    const countWeaponData = () => {\r\n      const dataCounts = {};\r\n\r\n      characterDetails.forEach(character => {\r\n        const weapon = character.weapon === 'greatsword' ? 'claymore' : character.weapon;\r\n        dataCounts[weapon] = dataCounts[weapon] ? dataCounts[weapon] + 1 : 1; // Increment count for the respective weapon\r\n      });\r\n      return dataCounts;\r\n    };\r\n\r\n    const weaponData = countWeaponData();\r\n\r\n    if (chartRef.current && Object.keys(weaponData).length !== 0) {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      // Define color map for each weapon type\r\n      const colorMap = {\r\n        polearm: 'red',\r\n        catalyst: 'blue',\r\n        sword: 'turquoise',\r\n        claymore: 'orange',\r\n        bow: 'pink',\r\n      };\r\n\r\n      const labels = Object.keys(weaponData);\r\n      const data = Object.values(weaponData).map(count => {\r\n        return {\r\n          x: labels,\r\n          y: count\r\n        };\r\n      });\r\n      const backgroundColor = 'rgba(0, 0, 0, 0)'; // Transparent background\r\n      const borderColor = Object.values(colorMap); // Border colors for each data point\r\n\r\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'line',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: 'Weapon Distribution',\r\n            data: data,\r\n            backgroundColor: backgroundColor,\r\n            borderColor: borderColor,\r\n            borderWidth: 2,\r\n            pointBackgroundColor: borderColor, // Point color\r\n            pointBorderColor: borderColor, // Point border color\r\n            pointRadius: 5, // Point radius\r\n            pointHoverRadius: 8, // Point hover radius\r\n            fill: false, // Disable fill under the line\r\n          }]\r\n        },\r\n        options: {\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: 'Weapon Distribution',\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [characterDetails]);\r\n\r\n  return (\r\n    <div className=\"line-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%', marginTop: '3%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraphWeapon;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}