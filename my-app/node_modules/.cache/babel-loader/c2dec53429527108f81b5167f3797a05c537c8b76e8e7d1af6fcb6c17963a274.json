{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\LineGraphObtainVia.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\nfunction LineGraphObtainVia() {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const obtainViaData = {\n      wish: 19,\n      quest: 3,\n      unknown: 4\n    };\n    if (chartRef.current && Object.keys(obtainViaData).length !== 0) {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n\n      // Set colors and labels\n      const backgroundColor = ['rgba(255, 165, 0, 0.5)',\n      // Orange for wish\n      'rgba(30, 144, 255, 0.5)',\n      // Dodger blue for quest\n      'rgba(128, 128, 128, 0.5)' // Gray for unknown\n      ];\n      const borderColor = ['rgba(255, 165, 0, 1)',\n      // Orange for wish\n      'rgba(30, 144, 255, 1)',\n      // Dodger blue for quest\n      'rgba(128, 128, 128, 1)' // Gray for unknown\n      ];\n      const label = 'Obtain Via Distribution';\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'line',\n        data: {\n          labels: Object.keys(obtainViaData),\n          datasets: [{\n            label: label,\n            data: Object.values(obtainViaData),\n            backgroundColor: backgroundColor,\n            borderColor: borderColor,\n            pointBackgroundColor: 'rgba(255, 255, 255, 1)',\n            // White point color\n            borderWidth: 2,\n            // Increased border width for better visibility\n            fill: true,\n            tension: 0.4\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top',\n              labels: {\n                color: 'rgba(255, 255, 255, 1)' // White border color for labels\n              }\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '3%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(LineGraphObtainVia, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineGraphObtainVia;\nexport default LineGraphObtainVia;\nvar _c;\n$RefreshReg$(_c, \"LineGraphObtainVia\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Legend","Tooltip","jsxDEV","_jsxDEV","register","LineGraphObtainVia","_s","chartRef","chartInstance","obtainViaData","wish","quest","unknown","current","Object","keys","length","destroy","backgroundColor","borderColor","label","getContext","type","data","labels","datasets","values","pointBackgroundColor","borderWidth","fill","tension","options","plugins","legend","display","position","color","scales","x","grid","y","beginAtZero","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/LineGraphObtainVia.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\r\n\r\nfunction LineGraphObtainVia() {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    const obtainViaData = {\r\n      wish: 19,\r\n      quest: 3,\r\n      unknown: 4\r\n    };\r\n\r\n    if (chartRef.current && Object.keys(obtainViaData).length !== 0) {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      // Set colors and labels\r\n      const backgroundColor = [\r\n        'rgba(255, 165, 0, 0.5)', // Orange for wish\r\n        'rgba(30, 144, 255, 0.5)', // Dodger blue for quest\r\n        'rgba(128, 128, 128, 0.5)' // Gray for unknown\r\n      ];\r\n      const borderColor = [\r\n        'rgba(255, 165, 0, 1)', // Orange for wish\r\n        'rgba(30, 144, 255, 1)', // Dodger blue for quest\r\n        'rgba(128, 128, 128, 1)' // Gray for unknown\r\n      ];\r\n      const label = 'Obtain Via Distribution';\r\n\r\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'line',\r\n        data: {\r\n          labels: Object.keys(obtainViaData),\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: Object.values(obtainViaData),\r\n              backgroundColor: backgroundColor,\r\n              borderColor: borderColor,\r\n              pointBackgroundColor: 'rgba(255, 255, 255, 1)', // White point color\r\n              borderWidth: 2, // Increased border width for better visibility\r\n              fill: true,\r\n              tension: 0.4,\r\n            }\r\n          ],\r\n        },\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n              labels: {\r\n                color: 'rgba(255, 255, 255, 1)', // White border color for labels\r\n              },\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"line-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%', marginTop: '3%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraphObtainVia;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}