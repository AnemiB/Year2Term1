{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PieChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  const [visionData, setVisionData] = useState({});\n  useEffect(() => {\n    const countVisionData = () => {\n      const dataCounts = {\n        Pyro: 0,\n        Cryo: 0,\n        Hydro: 0,\n        Electro: 0,\n        Anemo: 0,\n        Geo: 0,\n        Dendro: 0\n      };\n      [character1, character2].forEach(characterName => {\n        const character = characterDetails.find(char => char.name === characterName);\n        if (character) {\n          const vision = character.vision;\n          dataCounts[vision] = dataCounts[vision] ? dataCounts[vision] + 1 : 1;\n        }\n      });\n      return dataCounts;\n    };\n    if (character1 && character2 && characterDetails.length > 0) {\n      const dataCounts = countVisionData();\n      setVisionData(dataCounts);\n    }\n  }, [character1, character2, characterDetails]);\n  useEffect(() => {\n    let chartInstance = null;\n    if (chartRef.current && Object.keys(visionData).length !== 0) {\n      var _chartRef$current;\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      const ctx = (_chartRef$current = chartRef.current) === null || _chartRef$current === void 0 ? void 0 : _chartRef$current.getContext('2d');\n      const labels = Object.keys(visionData).filter(vision => visionData[vision] > 0);\n      const dataValues = labels.map(vision => visionData[vision]);\n      const colors = labels.map(vision => {\n        switch (vision) {\n          case 'pyro':\n            return 'red';\n          case 'cryo':\n            return 'white';\n          case 'hydro':\n            return 'blue';\n          case 'electro':\n            return 'purple';\n          case 'anemo':\n            return 'turquoise';\n          case 'geo':\n            return 'gold';\n          case 'dendro':\n            return 'green';\n          default:\n            return 'black';\n        }\n      });\n      chartInstance = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: labels,\n          datasets: [{\n            data: dataValues,\n            backgroundColor: colors\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: 'Vision Distribution'\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [visionData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pie-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        width: '100%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(PieChart, \"dK0eh7Q+iqjkd41AUYfYrGgMFYs=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Pie","Chart","jsxDEV","_jsxDEV","PieChart","character1","character2","characterDetails","_s","chartRef","visionData","setVisionData","countVisionData","dataCounts","Pyro","Cryo","Hydro","Electro","Anemo","Geo","Dendro","forEach","characterName","character","find","char","name","vision","length","chartInstance","current","Object","keys","_chartRef$current","destroy","ctx","getContext","labels","filter","dataValues","map","colors","type","data","datasets","backgroundColor","options","plugins","legend","display","position","title","text","className","children","style","padding","width","margin","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/PieChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto'; \r\n\r\nfunction PieChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n  const [visionData, setVisionData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const countVisionData = () => {\r\n      const dataCounts = { Pyro: 0, Cryo: 0, Hydro: 0, Electro: 0, Anemo: 0, Geo: 0, Dendro: 0 };\r\n      [character1, character2].forEach(characterName => {\r\n        const character = characterDetails.find(char => char.name === characterName);\r\n        if (character) {\r\n          const vision = character.vision;\r\n          dataCounts[vision] = dataCounts[vision] ? dataCounts[vision] + 1 : 1; \r\n        }\r\n      });\r\n      return dataCounts;\r\n    };\r\n\r\n    if (character1 && character2 && characterDetails.length > 0) {\r\n      const dataCounts = countVisionData();\r\n      setVisionData(dataCounts);\r\n    }\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    if (chartRef.current && Object.keys(visionData).length !== 0) {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n      \r\n      const ctx = chartRef.current?.getContext('2d');\r\n      const labels = Object.keys(visionData).filter(vision => visionData[vision] > 0); \r\n      const dataValues = labels.map(vision => visionData[vision]);\r\n      \r\n      const colors = labels.map(vision => {\r\n        switch (vision) {\r\n          case 'pyro':\r\n            return 'red';\r\n          case 'cryo':\r\n            return 'white';\r\n          case 'hydro':\r\n            return 'blue';\r\n          case 'electro':\r\n            return 'purple';\r\n          case 'anemo':\r\n            return 'turquoise';\r\n          case 'geo':\r\n            return 'gold';\r\n          case 'dendro':\r\n            return 'green';\r\n          default:\r\n            return 'black';\r\n        }\r\n      });\r\n\r\n      chartInstance = new Chart(ctx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              data: dataValues,\r\n              backgroundColor: colors, \r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Vision Distribution',\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [visionData]);\r\n\r\n  return (\r\n    <div className=\"pie-chart-container\">\r\n      <div style={{ padding: '20px', width: '100%', margin: 'auto' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}