{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Legend, Tooltip);\nfunction BarChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const countWeaponData = () => {\n      const dataCounts = {};\n      [character1, character2].forEach(characterName => {\n        const character = characterDetails.find(char => char.name === characterName);\n        if (character) {\n          const weapon = character.weapon === 'greatsword' ? 'claymore' : character.weapon;\n          dataCounts[weapon] = dataCounts[weapon] ? dataCounts[weapon] + 1 : 1; // Increment count for the respective weapon\n        }\n      });\n      return dataCounts;\n    };\n    const weaponData = countWeaponData();\n    if (chartRef.current && Object.keys(weaponData).length !== 0) {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n\n      // Define color map for each weapon type\n      const colorMap = {\n        polearm: 'red',\n        catalyst: 'blue',\n        sword: 'gold',\n        claymore: 'orange',\n        // Changed from 'greatsword'\n        bow: 'purple'\n      };\n      const labels = Object.keys(weaponData);\n      const backgroundColors = labels.map(weapon => colorMap[weapon]);\n      const borderColors = 'white'; // White border outline\n\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Weapon Distribution',\n            data: Object.values(weaponData),\n            backgroundColor: backgroundColors,\n            borderColor: borderColors,\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            title: {\n              display: true,\n              text: 'Weapon Distribution'\n            },\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [character1, character2, characterDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '3%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Legend","Tooltip","jsxDEV","_jsxDEV","register","BarChart","character1","character2","characterDetails","_s","chartRef","chartInstance","countWeaponData","dataCounts","forEach","characterName","character","find","char","name","weapon","weaponData","current","Object","keys","length","destroy","colorMap","polearm","catalyst","sword","claymore","bow","labels","backgroundColors","map","borderColors","getContext","type","data","datasets","label","values","backgroundColor","borderColor","borderWidth","options","plugins","title","display","text","legend","position","scales","x","grid","y","beginAtZero","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/BarChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Legend, Tooltip } from 'chart.js';\r\n\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Legend, Tooltip);\r\n\r\nfunction BarChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    const countWeaponData = () => {\r\n      const dataCounts = {};\r\n\r\n      [character1, character2].forEach(characterName => {\r\n        const character = characterDetails.find(char => char.name === characterName);\r\n        if (character) {\r\n          const weapon = character.weapon === 'greatsword' ? 'claymore' : character.weapon;\r\n          dataCounts[weapon] = dataCounts[weapon] ? dataCounts[weapon] + 1 : 1; // Increment count for the respective weapon\r\n        }\r\n      });\r\n      return dataCounts;\r\n    };\r\n\r\n    const weaponData = countWeaponData();\r\n\r\n    if (chartRef.current && Object.keys(weaponData).length !== 0) {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      // Define color map for each weapon type\r\n      const colorMap = {\r\n        polearm: 'red',\r\n        catalyst: 'blue',\r\n        sword: 'gold',\r\n        claymore: 'orange', // Changed from 'greatsword'\r\n        bow: 'purple',\r\n      };\r\n\r\n      const labels = Object.keys(weaponData);\r\n      const backgroundColors = labels.map(weapon => colorMap[weapon]);\r\n      const borderColors = 'white'; // White border outline\r\n\r\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'bar',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: 'Weapon Distribution',\r\n            data: Object.values(weaponData),\r\n            backgroundColor: backgroundColors,\r\n            borderColor: borderColors,\r\n            borderWidth: 1,\r\n          }]\r\n        },\r\n        options: {\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: 'Weapon Distribution',\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  return (\r\n    <div className=\"bar-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%', marginTop: '3%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}