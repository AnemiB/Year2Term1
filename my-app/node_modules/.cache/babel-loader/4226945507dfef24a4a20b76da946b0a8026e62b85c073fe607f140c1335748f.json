{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\pages\\\\Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PieChart from \"../components/PieChart\";\nimport LineChart from \"../components/LineChart\";\nimport BarChart from \"../components/BarChart\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comparison() {\n  _s();\n  const [characterDetails, setCharacterDetails] = useState([]);\n  const [selectedCharacter1, setSelectedCharacter1] = useState(null);\n  const [selectedCharacter2, setSelectedCharacter2] = useState(null);\n  useEffect(() => {\n    const fetchCharacterDetails = async () => {\n      try {\n        const response = await axios.get('https://genshinlist.com/api/characters');\n        setCharacterDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n    fetchCharacterDetails();\n  }, []);\n  const handleCharacterSelection = character => {\n    if (!selectedCharacter1) {\n      setSelectedCharacter1(character);\n    } else if (!selectedCharacter2) {\n      setSelectedCharacter2(character);\n    } else {\n      // Reset selections if both characters are already selected\n      setSelectedCharacter1(character);\n      setSelectedCharacter2(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    style: {\n      backgroundColor: '#192536',\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: characterDetails.map(character => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontSize: '14px',\n          display: 'block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCharacter1 === character || selectedCharacter2 === character,\n          onChange: () => handleCharacterSelection(character)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), character.name]\n      }, character.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), selectedCharacter1 && selectedCharacter2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Comparison for \", selectedCharacter1.name, \" vs \", selectedCharacter2.name, /*#__PURE__*/_jsxDEV(PieChart, {\n        character1: selectedCharacter1.name,\n        character2: selectedCharacter2.name,\n        characterDetails: characterDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        character1: selectedCharacter1.name,\n        character2: selectedCharacter2.name,\n        characterDetails: characterDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        character1: selectedCharacter1.name,\n        character2: selectedCharacter2.name,\n        characterDetails: characterDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please select two characters for comparison.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Comparison, \"PdKV2mOtXn4JS0JtQFipU00A4Vs=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","axios","PieChart","LineChart","BarChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Comparison","_s","characterDetails","setCharacterDetails","selectedCharacter1","setSelectedCharacter1","selectedCharacter2","setSelectedCharacter2","fetchCharacterDetails","response","get","data","error","console","handleCharacterSelection","character","className","style","backgroundColor","color","children","marginBottom","display","flexDirection","map","fontSize","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","character1","character2","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/pages/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PieChart from \"../components/PieChart\";\r\nimport LineChart from \"../components/LineChart\";\r\nimport BarChart from \"../components/BarChart\";\r\n\r\nfunction Comparison() {\r\n  const [characterDetails, setCharacterDetails] = useState([]);\r\n  const [selectedCharacter1, setSelectedCharacter1] = useState(null);\r\n  const [selectedCharacter2, setSelectedCharacter2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCharacterDetails = async () => {\r\n      try {\r\n        const response = await axios.get('https://genshinlist.com/api/characters');\r\n        setCharacterDetails(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching character details:', error);\r\n      }\r\n    };\r\n\r\n    fetchCharacterDetails();\r\n  }, []);\r\n\r\n  const handleCharacterSelection = (character) => {\r\n    if (!selectedCharacter1) {\r\n      setSelectedCharacter1(character);\r\n    } else if (!selectedCharacter2) {\r\n      setSelectedCharacter2(character);\r\n    } else {\r\n      // Reset selections if both characters are already selected\r\n      setSelectedCharacter1(character);\r\n      setSelectedCharacter2(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='page' style={{ backgroundColor: '#192536', color: 'white' }}>\r\n      <div style={{ marginBottom: '20px', display: 'flex', flexDirection: 'row' }}>\r\n        {characterDetails.map(character => (\r\n          <label key={character.name} style={{ fontSize: '14px', display: 'block' }}>\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={selectedCharacter1 === character || selectedCharacter2 === character} \r\n              onChange={() => handleCharacterSelection(character)} \r\n            /> \r\n            {character.name}\r\n          </label>\r\n        ))}\r\n      </div>\r\n      {(selectedCharacter1 && selectedCharacter2) ? (\r\n        <>\r\n          Comparison for {selectedCharacter1.name} vs {selectedCharacter2.name}\r\n          <PieChart character1={selectedCharacter1.name} character2={selectedCharacter2.name} characterDetails={characterDetails} />\r\n          <LineChart character1={selectedCharacter1.name} character2={selectedCharacter2.name} characterDetails={characterDetails} />\r\n          <BarChart character1={selectedCharacter1.name} character2={selectedCharacter2.name} characterDetails={characterDetails} />\r\n        </>\r\n      ) : (\r\n        <div>Please select two characters for comparison.</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comparison;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}