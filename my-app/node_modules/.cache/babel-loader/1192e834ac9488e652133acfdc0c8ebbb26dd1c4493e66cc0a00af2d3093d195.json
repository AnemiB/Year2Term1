{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\nfunction countRarity(characterDetails) {\n  const rarityCounts = {\n    '4 stars': 0,\n    '5 stars': 0\n  };\n  if (Array.isArray(characterDetails)) {\n    characterDetails.forEach(character => {\n      if (Array.isArray(character.rarity)) {\n        character.rarity.forEach(rarity => {\n          rarityCounts[`${rarity} stars`] += 1;\n        });\n      }\n    });\n  }\n  return rarityCounts;\n}\nfunction LineChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    if (chartRef.current && characterDetails) {\n      const character1Data = characterDetails.find(character => character.name === character1);\n      const character2Data = characterDetails.find(character => character.name === character2);\n      if (character1Data && character2Data) {\n        const character1RarityCounts = countRarity(character1Data);\n        const character2RarityCounts = countRarity(character2Data);\n        chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n          type: 'line',\n          data: {\n            labels: ['4 Stars', '5 Stars'],\n            datasets: [{\n              label: character1,\n              data: [character1RarityCounts['4 stars'], character1RarityCounts['5 stars']],\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n              fill: true,\n              tension: 0.4\n            }, {\n              label: character2,\n              data: [character2RarityCounts['4 stars'], character2RarityCounts['5 stars']],\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n              borderWidth: 1,\n              fill: true,\n              tension: 0.4\n            }]\n          },\n          options: {\n            plugins: {\n              legend: {\n                display: true,\n                position: 'top'\n              }\n            },\n            scales: {\n              x: {\n                grid: {\n                  display: false\n                }\n              },\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      }\n    }\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [character1, character2, characterDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '300px',\n        padding: '20px',\n        marginLeft: '30%',\n        marginTop: '3%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Legend","Tooltip","jsxDEV","_jsxDEV","register","countRarity","characterDetails","rarityCounts","Array","isArray","forEach","character","rarity","LineChart","character1","character2","_s","chartRef","chartInstance","current","character1Data","find","name","character2Data","character1RarityCounts","character2RarityCounts","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","borderWidth","fill","tension","options","plugins","legend","display","position","scales","x","grid","y","beginAtZero","destroy","className","children","style","width","height","padding","marginLeft","marginTop","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/LineChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip } from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Legend, Tooltip);\r\n\r\nfunction countRarity(characterDetails) {\r\n  const rarityCounts = { '4 stars': 0, '5 stars': 0 };\r\n\r\n  if (Array.isArray(characterDetails)) {\r\n    characterDetails.forEach(character => {\r\n      if (Array.isArray(character.rarity)) {\r\n        character.rarity.forEach(rarity => {\r\n          rarityCounts[`${rarity} stars`] += 1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return rarityCounts;\r\n}\r\n\r\nfunction LineChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    if (chartRef.current && characterDetails) {\r\n      const character1Data = characterDetails.find(character => character.name === character1);\r\n      const character2Data = characterDetails.find(character => character.name === character2);\r\n\r\n      if (character1Data && character2Data) {\r\n        const character1RarityCounts = countRarity(character1Data);\r\n        const character2RarityCounts = countRarity(character2Data);\r\n\r\n        chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n          type: 'line',\r\n          data: {\r\n            labels: ['4 Stars', '5 Stars'],\r\n            datasets: [\r\n              {\r\n                label: character1,\r\n                data: [character1RarityCounts['4 stars'], character1RarityCounts['5 stars']],\r\n                backgroundColor: 'rgba(255, 99, 132, 0.2)', \r\n                borderColor: 'rgba(255, 99, 132, 1)',\r\n                pointBackgroundColor: 'rgba(255, 99, 132, 1)',\r\n                borderWidth: 1,\r\n                fill: true,\r\n                tension: 0.4,\r\n              },\r\n              {\r\n                label: character2,\r\n                data: [character2RarityCounts['4 stars'], character2RarityCounts['5 stars']],\r\n                backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                pointBackgroundColor: 'rgba(54, 162, 235, 1)',\r\n                borderWidth: 1,\r\n                fill: true,\r\n                tension: 0.4,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            plugins: {\r\n              legend: {\r\n                display: true,\r\n                position: 'top',\r\n              },\r\n            },\r\n            scales: {\r\n              x: {\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  return (\r\n    <div className=\"line-chart-container\">\r\n      <div style={{ width: '70%', height: '300px', padding: '20px', marginLeft: '30%', marginTop: '3%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}