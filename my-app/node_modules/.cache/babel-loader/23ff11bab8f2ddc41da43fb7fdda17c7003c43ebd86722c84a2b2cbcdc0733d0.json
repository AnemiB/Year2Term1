{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anemi\\\\OneDrive\\\\Documents\\\\GitHub\\\\MyApp\\\\my-app\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nfunction BarChart({\n  character1,\n  character2,\n  characterDetails\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const character1Data = characterDetails.find(character => character.name === character1);\n    const character2Data = characterDetails.find(character => character.name === character2);\n    if (chartRef.current && character1Data && character2Data) {\n      const character1WeaponCounts = countWeaponOccurrences(character1Data);\n      const character2WeaponCounts = countWeaponOccurrences(character2Data);\n      const character1Weapons = Object.keys(character1WeaponCounts);\n      const character2Weapons = Object.keys(character2WeaponCounts);\n      const allWeapons = [...new Set([...character1Weapons, ...character2Weapons])];\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\n        type: 'bar',\n        data: {\n          labels: allWeapons,\n          datasets: [{\n            label: character1,\n            data: allWeapons.map(weapon => character1WeaponCounts[weapon] || 0),\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }, {\n            label: character2,\n            data: allWeapons.map(weapon => character2WeaponCounts[weapon] || 0),\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              grid: {\n                display: false // Hide the x-axis grid lines\n              }\n            },\n            y: {\n              beginAtZero: true // Start y-axis scale from zero\n            }\n          },\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      // Cleanup function to destroy the chart when the component unmounts or before rendering a new one\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [character1, character2, characterDetails]);\n\n  // Function to count occurrences of each weapon type for a given character\n  const countWeaponOccurrences = characterData => {\n    const weaponCounts = {};\n    if (characterData && characterData.weapons) {\n      characterData.weapons.forEach(weapon => {\n        if (weaponCounts.hasOwnProperty(weapon)) {\n          weaponCounts[weapon]++;\n        } else {\n          weaponCounts[weapon] = 1;\n        }\n      });\n    }\n    return weaponCounts;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50%',\n        height: '500px',\n        marginLeft: '31%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","BarChart","character1","character2","characterDetails","_s","chartRef","chartInstance","character1Data","find","character","name","character2Data","current","character1WeaponCounts","countWeaponOccurrences","character2WeaponCounts","character1Weapons","Object","keys","character2Weapons","allWeapons","Set","getContext","type","data","labels","datasets","label","map","weapon","backgroundColor","borderColor","borderWidth","options","scales","x","grid","display","y","beginAtZero","plugins","legend","position","destroy","characterData","weaponCounts","weapons","forEach","hasOwnProperty","className","children","style","width","height","marginLeft","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anemi/OneDrive/Documents/GitHub/MyApp/my-app/src/components/BarChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nfunction BarChart({ character1, character2, characterDetails }) {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n\r\n    const character1Data = characterDetails.find(character => character.name === character1);\r\n    const character2Data = characterDetails.find(character => character.name === character2);\r\n\r\n    if (chartRef.current && character1Data && character2Data) {\r\n      const character1WeaponCounts = countWeaponOccurrences(character1Data);\r\n      const character2WeaponCounts = countWeaponOccurrences(character2Data);\r\n\r\n      const character1Weapons = Object.keys(character1WeaponCounts);\r\n      const character2Weapons = Object.keys(character2WeaponCounts);\r\n      const allWeapons = [...new Set([...character1Weapons, ...character2Weapons])];\r\n\r\n      chartInstance = new ChartJS(chartRef.current.getContext('2d'), {\r\n        type: 'bar',\r\n        data: {\r\n          labels: allWeapons,\r\n          datasets: [\r\n            {\r\n              label: character1,\r\n              data: allWeapons.map(weapon => character1WeaponCounts[weapon] || 0),\r\n              backgroundColor: 'rgba(255, 99, 132, 0.5)', \r\n              borderColor: 'rgba(255, 99, 132, 1)', \r\n              borderWidth: 1,\r\n            },\r\n            {\r\n              label: character2,\r\n              data: allWeapons.map(weapon => character2WeaponCounts[weapon] || 0),\r\n              backgroundColor: 'rgba(54, 162, 235, 0.5)', \r\n              borderColor: 'rgba(54, 162, 235, 1)', \r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false, // Hide the x-axis grid lines\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true, // Start y-axis scale from zero\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      // Cleanup function to destroy the chart when the component unmounts or before rendering a new one\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [character1, character2, characterDetails]);\r\n\r\n  // Function to count occurrences of each weapon type for a given character\r\n  const countWeaponOccurrences = (characterData) => {\r\n    const weaponCounts = {};\r\n    if (characterData && characterData.weapons) {\r\n      characterData.weapons.forEach(weapon => {\r\n        if (weaponCounts.hasOwnProperty(weapon)) {\r\n          weaponCounts[weapon]++;\r\n        } else {\r\n          weaponCounts[weapon] = 1;\r\n        }\r\n      });\r\n    }\r\n    return weaponCounts;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bar-chart-container\">\r\n      <div style={{ width: '50%', height: '500px', marginLeft: '31%' }}>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}